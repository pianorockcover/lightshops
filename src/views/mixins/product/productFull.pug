include specification.pug

mixin productFull(customOptions = {})
    -
        let options = {};
        options.id = utils.randomInt(100, 999);
        options.name = utils.faker.commerce.productName();
        options.category = utils.faker.commerce.department();
        options.rate = utils.randomInt(0, 5);
        options.price = `$${utils.randomInt(9, 80)}.00`;

        options.imageId = 1;
        options.image = utils.getUpload(`products/${options.imageId}.jpg`);

        options.labels = new Array(utils.randomInt(0, 3)).fill(null).map(() => ({
            class: utils.randomElem(["bg-warning", "bg-success", "bg-contrast"]),
            text: utils.faker.commerce.productAdjective(),
        }));
        options.reviewsAmount = utils.randomInt(100, 999);
        options.oldPrice = utils.randomInt(100, 999) % 1 === 0 ? `$${utils.randomInt(80, 120)}.00` : undefined;
        options.link = utils.randomElem(["product-card", "product-card-1"]);
        options = Object.assign(options, customOptions);

        const zoomViewId = `productZoomView${options.id}`;

    .product.product-full
        .row
            div(class=options.forWindow ? "col-xl-5" : "col-xl-6 col-xxl-3 mb-5")
                .product-full-gallery
                    .product-full-thumbnails
                        .product-full-thumbnail.active(data-image=options.image data-zoom-view=`#${zoomViewId}`)
                            img.product-full-thumbnail-image(src=options.image, alt="Product thumbnail")
                        - for (let i = 1; i < 3; ++i) {
                            - const thumbImage = utils.getUpload(`products/${options.imageId}-v${i}.jpg`);
                            .product-full-thumbnail(data-image=thumbImage data-zoom-view=`#${zoomViewId}`)
                                img.product-full-thumbnail-image(src=thumbImage, alt="Product thumbnail")
                        - }
                    .product-full-zoom-view
                        .product-full-zoom-view-wrapper(id=zoomViewId)

                            a.product-full-zoom-view-link.active(href=options.image)
                                img.product-full-zoom-view-image(src=options.image alt="Product full view")

                            a.product-full-zoom-view-link(href=src=utils.getUpload(`products/${options.imageId}-v1.jpg`))
                                img.product-full-thumbnail-image(src=utils.getUpload(`products/${options.imageId}-v1.jpg`), alt="Product full view")

                            a.product-full-zoom-view-link(href=src=utils.getUpload(`products/${options.imageId}-v2.jpg`))
                                img.product-full-thumbnail-image(src=utils.getUpload(`products/${options.imageId}-v2.jpg`), alt="Product full view")

                        .product-labels
                            - for (let label of (options.labels || [])) {
                                .product-label(class= label.class)= label.text
                            - }
                        .product-favourite-icon
            div(class=options.forWindow ? "col-xl-7" : "col-xl-6 col-xxl-4 mb-5")
                a.product-category(href=utils.anchor("category") title= options.category)= options.category
                .product-title= options.name
                +rate(Object.assign(options, { showAmount: true }))
                .product-short-description
                    | #{utils.faker.lorem.paragraphs()}
                +productOption("Style", options.link)
                +productOption("Color", options.link, true)
                .product-full-buy-block
                    .product-price
                        | #{options.price}
                        - if (options.oldPrice) {
                            .product-price-old-value=options.oldPrice
                        - }
                    +quantity()
                    .btn.btn-secondary.btn-large
                        .bi.bi-bag 
                        | Add to cart
            - if (!options.forWindow) {
                .col-xl-12.col-xxl-5.pb-2
                    +tabs([
                        {
                            name: "Customer Reviews (3)",
                            contentId: "#productReviews",
                            active: true,
                        },
                        {
                            name: "Full Description",
                            contentId: "#productDescription",
                        },
                        {
                            name: "Specification",
                            contentId: "#productSpecification",
                        },
                    ])
                    .tab-content#productReviews
                        +reviews(options)
                    .tab-content#productSpecification
                        +specification()
                    .tab-content#productDescription
                        +customContent()
            - }
